Kamerasteuerung

Ziele:
    - First-Person
    - Bewewgung mit WASD
    - Bewegung durch Maus
    - Springen
    - Ducken
    - Kollisionen

Offene Probleme:
    - Kollision nach unten nicht zuverlässig --> Runterfallen vom Rand nicht möglich
    - Ändern der Größe des Spielers beim ducken --> auf Objekt stehen gestaltet sich schwierig

Insgesamt:
 - basiert auf dem Beispiel misc/contolls/pointerLock von three.js
 - Zuerst Test-Szene mit Boden und Wänden gebaut

Bewegung mit WASD:
    - unverändert übernommen?

Bewegung durch Maus:
    - unverändert übernommen?

Springen:
    - weitestgehen übernommen, Problem war, dass sich die Geschwindigkeit nach oben beim mehrmaligen drücken der Leertaste aufaddiert hat
    - dies wurde behoben, indem nur gesprungen werden kann, wenn die Geschwindigkeit nach oben gleich null ist

Ducken:
    - Wenn der Spieler aus Shift drückt, wird die Figur um 20 Einheiten verkleinert und die Geschwindig keit wird verringert
    - Problem:
        1. Springen wärend der Spieler geduckt ist sollte nicht möglich sein
        2. Kollisionsberechnung über die schrägen Strahlen nicht möglich
        3.Spieler darf under einem Objekt nicht aufstehen
        4. Beim verkleinern der Figur hat die Funktion, die verhindert, dass man ins nichts fällt, die Figur wieder auf die alte Höhe zurückgesetzt
        5. ?
    - Verbesserungen:
        1. Sprung kann nur ausgeführt werden, wenn der Spieler nicht geduckt ist
        2. wenn der Spieler geduckt ist, werden die Strahlen zur Kollisionsberechnung waagerecht vom Kopf ausgesandt
        3. Wenn die Shift-Taste losgelassen wird, wird geprüft, ob der Spieler unter einem Objekt ist. Der Spieler steht auf, soballd keine Kollisionen nach oben mehr festgestellt werden. Dazu wurde nur für den Fall, dass der Spieler geduckt ist eine Kollisionsabfrage nach oben eingebaut
        4. Höhenfunktion tiefer gesetzt?
        5. ?


Kollisionen:
    - alle Objekte, mit denen kollidiert werden soll, werden zu einem Array(tarrain)

    - Test der Kollisionen nach unten aus Beispiel übernommen

    - erster Versuch: es wird jeweils nach vorne, hinten, rechts und links waagerecht auf Kopfhöhe des Spielers ein Strahl ausgesandt und auf Schnittpunkte mit Objekten in der Szene geprüft
    - Problem: kleine Objekte werden nicht gesehen und der Spieler kann diurch sie hindurchgehen

    - zweiter Versuch: die Strahlen werden jeweils auf Kopf- und Fußhöhe ausgesandt
    - Problem: Objekte auf "Bauchhöhe" ḱönnen nicht erkannt werden(z. B. Tische, da in der Mitte nur die Tischplatte ist und draunter nichts), Berechnung recht aufwändig

    - Idee: jeweils eine Einheit vor, hinter, rechts und links von Spieler jeweils senkrecht vom Boden einen Strahl aussenden (idee von Versuch drei unserer Meinung nach weniger Fehleranfällig und effizienter)

    - dritter Versuch: es werden von den Füßen des Spielers aus Strahlen schräg in die vier Richtungen ausgesandt. Dadurch werden sowohl kleine, als auch "schwebende" Objekte erkannt.
    - Problem: Berechnung der Richtungen für die Strahlen(behoben)
